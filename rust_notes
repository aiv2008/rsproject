1.unsafe 的超能力
unsafe 能赋予我们 5 种超能力，这些能力在安全的 Rust 代码中是无法获取的：

.解引用裸指针，就如上例所示
.调用一个 unsafe 或外部的函数
.访问或修改一个可变的静态变量
.实现一个 unsafe 特征
.访问 union 中的字段

2. 我们已经学过三种类似指针的概念：引用、智能指针和裸指针。与前两者不同，裸指针：

.可以绕过 Rust 的借用规则，可以同时拥有一个数据的可变、不可变指针，甚至还能拥有多个可变的指针
.并不能保证指向合法的内存
.可以是 null
.没有实现任何自动的回收 (drop)
总之，裸指针跟 C 指针是非常像的，使用它需要以牺牲安全性为前提，但我们获得了更好的性能，也可以跟其它语言或硬件打交道
